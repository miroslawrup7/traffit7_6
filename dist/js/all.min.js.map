{"version":3,"sources":["main.js"],"names":["jobLoc","document","querySelector","jobLabelLoc","jobInputLoc","jobClearBtnLoc","cityLoc","cityListBtnLoc","cityListTitleLoc","citySelectedOptionsLoc","cityListLoc","distanceLoc","distanceListBtnLoc","distanceListTitleLoc","distanceListLoc","sectorLoc","sectorListBtnLoc","sectorListTitleLoc","sectorSelectedOptionsLoc","sectorListLoc","employmentFormLoc","employmentFormListBtnLoc","employmentFormListTitleLoc","employmentFormSelectedOptionsLoc","employmentFormListLoc","workingHoursLoc","workingHoursListBtnLoc","workingHoursListTitleLoc","workingHoursSelectedOptionsLoc","workingHoursListLoc","languageLoc","languageListBtnLoc","languageListTitleLoc","languageSelectedOptionsLoc","languageListLoc","awardedResultsLoc","recordsOnPageLoc","pagesSwitchLoc","pagesContainer","pageButtonsLoc","querySelectorAll","brancheWrapperLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","citiesLoc","resultsLoc","remoteLoc","remoteInputLoc","relocationLoc","relocationInputLoc","searchInputLoc","distanceInputsLoc","distanceTitleLoc","searchBtn","advancedSearchBar","advancedSearchBtn","advancedContainer","setParentIframeHeight","iframeHeight","body","scrollHeight","window","parent","postMessage","addEventListener","e","classList","add","style","opacity","display","event","target","value","remove","stopPropagation","click","removePaddingBottomToFilterList","filterList","closest","paddingBottom","boxShadow","addPaddingBottomToFilterList","listCount","Array","from","reduce","count","ul","length","liStyle","getComputedStyle","liStyleMarginBottom","parseInt","marginBottom","split","totalCount","offsetHeight","listHeight","height","dropDownListArray","forEach","elem","toggle","some","selector","expand","contains","filteredRecordsArray_11","apiNumber","filterConfigData","apiPage","rawAPIArray","allRecordsArray","recordsNumber","firstRecordNumber","recordsOnPage","filtersON","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterCountriesList","innerText","Number","dataset","distance","filterListLocArray","selectedOptionsInFilterArray","setClearBtn","index","clearBtn","filtersQuantityBtn","filtersSelectedOptions","filtersListTitle","el","checked","actionAfterFilterInputChange","filterParentLoc","filtersListTitleLoc","filtersSelectedOptionsLoc","indexFilter","indexOf","push","indexDeletedItem","splice","join","addListenerToFilterListsElements","createRecordBoxes","recordsArray","replaceChildren","i","borderColorClass","textColorClass","Object","keys","recruitmentType_colorOnly","recruitmentType","formaZatrudnienia","jobForm","insertAdjacentHTML","url","lang","branche","name","city","jobType","visibleRate","salaryFrom","salaryTo","remote","relocation","setPages","pagesQuantityCalc","Math","ceil","maxPageBtns","n","moveNextPagesBtns","changePage","createFilteredRecordsArray","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","branche_filter","filter","map","filteredRecordsArray_1","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","language_filter","filteredRecordsArray_4","selectedCountry","filteredRecordsArray_5","location_country_filter","country","filteredRecordsArray_6","selectedCity","location_city_filter","filteredRecordsArray_7","location_distance","lati","longi","min_lati","max_lati","min_longi","max_longi","selectedDistance","el_city","el_record","cos","PI","filteredRecordsArray_8","remote_filter","filteredRecordsArray_9","filteredRecordsArray_10","searchText","position","description","field_id","toLowerCase","search","selectedRecruitmentType","recruitmentType_filter","pagesContainerStart","dropDownBtnStart","dropDownLoc","showHideFilters","createFilterLists","relocation_visible","language_visible","remote_visible","location_visible","branche_visible","sort","a","b","localeCompare","compare","key","accumulator","allCitiesObj","concat","allCitiesArray","globActivePageNo","pageBtn","firstRecord","lastRecord","movePrevPagesBtns","activePageNo","firstDispalyedPageNo","shift","lastDispalyedPageNo","pop","getWidth","max","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","clientHeight","setPagesBtnQuantity","newMaxPageBtns","filterAwarded","configFilterArray","awardedRecordsArray","property","findFlag","element","createAwardedRecordBoxes","awarded","margin","createDataForFilters","undefined","findIndex","arr_el","reworkData","parsedJobLocation","options","job_location","JSON","parse","advert","branches","language","job_type","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","_relokacja","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","values","getAPI","fetch","mode","headers","getAPI_2","loopOnAPI","jsonData","createRecordsObjFromAPI","createRecordsObjFromAPI_2","async","rawData","json","getConfigFilter","readConfigFilter","console","error","clearAllFiltersLoc","preventDefault"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\"\r\n\r\nconst jobLoc = document.querySelector(\".job\");\r\nconst jobLabelLoc = document.querySelector(\".job label\");\r\nconst jobInputLoc = document.querySelector(\".job input\");\r\nconst jobClearBtnLoc = jobLoc.querySelector(\".clear-btn\")\r\n\r\nconst cityLoc = document.querySelector(\".city\");\r\nconst cityListBtnLoc = document.querySelector(\".city .arrow-down\");\r\nconst cityListTitleLoc = document.querySelector(\".city .list-title\");\r\nconst citySelectedOptionsLoc = document.querySelector(\".city .selected-options\");\r\nconst cityListLoc = document.querySelector(\".city .list\");\r\n\r\nconst distanceLoc = document.querySelector(\".distance\");\r\nconst distanceListBtnLoc = document.querySelector(\".distance .arrow-down\");\r\nconst distanceListTitleLoc = document.querySelector(\".distance .list-title\");\r\nconst distanceListLoc = document.querySelector(\".distance .list\");\r\n\r\nconst sectorLoc = document.querySelector(\".sector\");\r\nconst sectorListBtnLoc = document.querySelector(\".sector .arrow-down\");\r\nconst sectorListTitleLoc = document.querySelector(\".sector .list-title\");\r\nconst sectorSelectedOptionsLoc = document.querySelector(\".sector .selected-options\");\r\nconst sectorListLoc = document.querySelector(\".sector .list\");\r\n\r\nconst employmentFormLoc = document.querySelector(\".employment-form\");\r\nconst employmentFormListBtnLoc = document.querySelector(\".employment-form .arrow-down\");\r\nconst employmentFormListTitleLoc = document.querySelector(\".employment-form .list-title\");\r\nconst employmentFormSelectedOptionsLoc = document.querySelector(\".employment-form .selected-options\");\r\nconst employmentFormListLoc = document.querySelector(\".employment-form .list\");\r\n\r\nconst workingHoursLoc = document.querySelector(\".working-hours\");\r\nconst workingHoursListBtnLoc = document.querySelector(\".working-hours .arrow-down\");\r\nconst workingHoursListTitleLoc = document.querySelector(\".working-hours .list-title\");\r\nconst workingHoursSelectedOptionsLoc = document.querySelector(\".working-hours .selected-options\");\r\nconst workingHoursListLoc = document.querySelector(\".working-hours .list\");\r\n\r\nconst languageLoc = document.querySelector(\".language\");\r\nconst languageListBtnLoc = document.querySelector(\".language .arrow-down\");\r\nconst languageListTitleLoc = document.querySelector(\".language .list-title\");\r\nconst languageSelectedOptionsLoc = document.querySelector(\".language .selected-options\");\r\nconst languageListLoc = document.querySelector(\".language .list\");\r\n\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\nconst pagesContainer = document.querySelector(\".pages-container\");\r\nlet pageButtonsLoc = document.querySelectorAll(\".page\");\r\n\r\nconst brancheWrapperLoc = document.querySelector(\".sector\");\r\nconst branchesLoc = document.querySelector(\".sector ul\");\r\nconst jobFormLoc = document.querySelector(\".employment-form ul\"); \r\nconst jobTypeLoc = document.querySelector(\".working-hours ul\"); \r\nconst langLoc = document.querySelector(\".language ul\");\r\nconst citiesLoc = document.querySelector(\".city ul\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\n\r\nconst remoteLoc = document.querySelector(\".remote\");\r\nconst remoteInputLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\".relocation\");\r\nconst relocationInputLoc = document.querySelector(\"#relocation\");\r\nconst searchInputLoc = document.querySelector(\".job input\");\r\n\r\nconst distanceInputsLoc = document.querySelectorAll(\".distance input\");\r\nconst distanceTitleLoc = document.querySelector(\".distance .list-title\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst advancedSearchBar = document.querySelector(\".wrapper.five\");\r\nconst advancedSearchBtn = document.querySelector(\".advanced-search-btn .arrow-down\");\r\nconst advancedContainer = document.querySelector(\".advanced-container\");\r\n\r\n// Send data from iframe to parent ///////////////////////////////////////////\r\nconst setParentIframeHeight = () => {\r\n    const iframeHeight = document.body.scrollHeight\r\n    window.parent.postMessage(iframeHeight, 'https://miroslawrup7.github.io');\r\n}\r\n\r\n// =====================\r\n\r\njobLoc.addEventListener(\"click\", (e) => {\r\n    jobLabelLoc.classList.add(\"mini\");\r\n    jobInputLoc.classList.add(\"active\");\r\n    jobClearBtnLoc.style.opacity = \"0.5\";\r\n    jobClearBtnLoc.style.display = \"flex\";\r\n})\r\n\r\njobInputLoc.addEventListener(\"blur\", (event) => {\r\n    if (!event.target.value) {\r\n        jobLabelLoc.classList.remove(\"mini\");\r\n        jobInputLoc.classList.remove(\"active\");\r\n        jobClearBtnLoc.style.opacity = \"0\";\r\n        jobClearBtnLoc.style.display = \"none\";\r\n    }\r\n})\r\n\r\njobClearBtnLoc.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation()\r\n    jobInputLoc.value = \"\";\r\n    jobLabelLoc.classList.remove(\"mini\");\r\n    jobInputLoc.classList.remove(\"active\");\r\n    jobClearBtnLoc.style.opacity = \"0\";\r\n    jobClearBtnLoc.style.display = \"none\";\r\n    searchBtn.click();\r\n})\r\n\r\nconst removePaddingBottomToFilterList = (filterList) => {\r\n    filterList.closest(\".element\").style.paddingBottom = \"\";\r\n    filterList.closest(\".element\").style.boxShadow = \"\";\r\n}\r\n\r\nconst addPaddingBottomToFilterList = (filterList) => {\r\n    if (filterList.closest(\".element\").style.paddingBottom === \"\" ) {\r\n        const listCount = Array.from(e.querySelector(\".list\").querySelectorAll(\"ul\")).reduce((count, ul) => count + ul.querySelectorAll(\"li\").length, 0);\r\n        const liStyle = getComputedStyle(document.querySelector(\".list ul li\"));\r\n        const liStyleMarginBottom = parseInt(liStyle.marginBottom.split(0,-2));\r\n        const liStyleHeight = document.querySelector(\".list ul li\").offsetHeight;\r\n        const titleHeight = document.querySelector(\".list-title\").offsetHeight;\r\n        const totalCount = (listCount * (liStyleMarginBottom + liStyleHeight)) + titleHeight + (liStyleMarginBottom * 2);\r\n        const listHeight = totalCount > 400 ? 400 : totalCount;\r\n        \r\n        filterList.closest(\".element\").style.paddingBottom = \"15px\";\r\n        filterList.closest(\".element\").style.boxShadow = \"0px 0px 3px rgba(0,0,0,0.1)\";\r\n        filterList.closest(\".element\").style.height = listHeight +\"px\";\r\n    } else {\r\n        removePaddingBottomToFilterList(filterList);\r\n    }\r\n}\r\n\r\nconst dropDownListArray = [cityLoc, distanceLoc, sectorLoc, employmentFormLoc, workingHoursLoc, languageLoc]\r\n\r\ndropDownListArray.forEach((elem) => {\r\n    elem.querySelector(\".list-title\").addEventListener(\"click\", () => {\r\n        elem.querySelector(\".list\").classList.toggle(\"expand\");\r\n        elem.querySelector(\".arrow-down\").classList.toggle(\"rotate180\");\r\n        addPaddingBottomToFilterList(elem.querySelector(\".list-title\"));\r\n    })\r\n})\r\n\r\ndropDownListArray.forEach((elem) => {\r\n    elem.addEventListener(\"mouseleave\", () => {\r\n        elem.querySelector(\".list\").classList.remove(\"expand\");\r\n        elem.querySelector(\".arrow-down\").classList.remove(\"rotate180\");\r\n        removePaddingBottomToFilterList(elem.querySelector(\".list-title\"));\r\n    })\r\n})\r\n\r\ndocument.addEventListener(\"touchstart\", function (event) {\r\n    const target = event.target;\r\n    const isTargetInArray = dropDownListArray.some(selector => {\r\n        let expand = selector.querySelector('.expand');\r\n\r\n        return selector.contains(expand) && !selector.contains(event.target);\r\n      });\r\n  \r\n    if (isTargetInArray) {\r\n        dropDownListArray.forEach((elem) => {\r\n            elem.querySelector(\".list\").classList.remove(\"expand\");\r\n            elem.querySelector(\".arrow-down\").classList.remove(\"rotate180\");\r\n            removePaddingBottomToFilterList(elem.querySelector(\".list-title\"));\r\n        });\r\n    }\r\n})\r\n\r\nlet filterConfigData = {};\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\nlet recordsNumber = 0;\r\nlet firstRecordNumber = 0;\r\nlet recordsOnPage = 20;\r\nlet filtersON = false;\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterCountriesList = {};\r\nlet filteredRecordsArray_11;\r\nlet apiNumber\r\n\r\n// change distance label after choose\r\ndistanceInputsLoc.forEach((elem) => {\r\n    elem.addEventListener(\"change\", () => {\r\n        distanceTitleLoc.innerText = `+${Number(elem.value)} km`;\r\n        distanceTitleLoc.dataset.distance = Number(elem.value);\r\n        searchBtn.click();\r\n    })\r\n})\r\n\r\nrecordsOnPageLoc.value = recordsOnPage;\r\n\r\nconst filterListLocArray = [cityLoc, sectorLoc, employmentFormLoc, workingHoursLoc, languageLoc];\r\nlet selectedOptionsInFilterArray = [[],[],[],[],[],[]];\r\n\r\nconst setClearBtn = () => {\r\n    filterListLocArray.forEach((elem, index) => {\r\n\r\n        // selectedOptionsInFilterArray.push([]);\r\n    \r\n        const clearBtn = elem.querySelector(\".clear-btn\");\r\n        const filtersQuantityBtn = elem.querySelector(\".filters-quantity\");\r\n        const filtersSelectedOptions = elem.querySelector(\".selected-options\");\r\n        const filtersListTitle = elem.querySelector(\".list-title\");\r\n    \r\n        clearBtn.addEventListener(\"mouseenter\", () => {\r\n            if (selectedOptionsInFilterArray[index].length !== 0) {\r\n                filtersQuantityBtn.style.opacity = \"0\";\r\n                clearBtn.style.opacity = \"1\";\r\n            }\r\n        });\r\n        \r\n        clearBtn.addEventListener(\"mouseleave\", () => {\r\n            if (selectedOptionsInFilterArray[index].length !== 0) {\r\n                filtersQuantityBtn.style.opacity = \"1\";\r\n                clearBtn.style.opacity = \"0\";\r\n            }\r\n        });\r\n    \r\n        clearBtn.addEventListener(\"click\", () => {\r\n            if (selectedOptionsInFilterArray[index].length !== 0) {\r\n                selectedOptionsInFilterArray[index] = [];\r\n                clearBtn.style.opacity = \"0\";\r\n                elem.querySelectorAll(\"input\").forEach((el) => {\r\n                    el.checked = false;\r\n                })\r\n                filtersSelectedOptions.innerText = \"\";\r\n                filtersListTitle.classList.remove(\"mini\");\r\n                filtersQuantityBtn.style.opacity = \"0\";\r\n                searchBtn.click();\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nsetClearBtn()\r\n\r\nconst actionAfterFilterInputChange = (e) => {\r\n    const filterParentLoc = e.target.closest(\".drop-down-container\");\r\n    const filtersQuantityBtn = filterParentLoc.querySelector(\".filters-quantity\");\r\n    const filtersListTitleLoc = filterParentLoc.querySelector(\".list-title\");\r\n    const filtersSelectedOptionsLoc = filterParentLoc.querySelector(\".selected-options\");\r\n   \r\n    const indexFilter = filterListLocArray.indexOf(filterParentLoc);\r\n\r\n    if (e.target.checked) {\r\n        selectedOptionsInFilterArray[indexFilter].push(e.target.value);\r\n    } else {\r\n        const indexDeletedItem = selectedOptionsInFilterArray[indexFilter].indexOf(e.target.value);\r\n        selectedOptionsInFilterArray[indexFilter].splice(indexDeletedItem,1);\r\n    }\r\n\r\n    selectedOptionsInFilterArray[indexFilter]\r\n\r\n    if (selectedOptionsInFilterArray[indexFilter].length !== 0) {\r\n        filtersListTitleLoc.classList.add(\"mini\");\r\n        filtersQuantityBtn.style.opacity = \"1\";\r\n        filtersQuantityBtn.innerText = selectedOptionsInFilterArray[indexFilter].length;\r\n    } else {\r\n        filtersListTitleLoc.classList.remove(\"mini\");\r\n        filtersQuantityBtn.style.opacity = \"0\";\r\n    }\r\n\r\n    filtersSelectedOptionsLoc.innerText = selectedOptionsInFilterArray[indexFilter].join(\", \");\r\n    searchBtn.click();\r\n}\r\n\r\nconst addListenerToFilterListsElements = () => {\r\n    \r\n    document.querySelectorAll(\".city ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n    \r\n    document.querySelectorAll(\".sector ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n    document.querySelectorAll(\".employment-form ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n    document.querySelectorAll(\".working-hours ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n    document.querySelectorAll(\".language ul input\").forEach((elem) => {\r\n        elem.addEventListener(\"change\", actionAfterFilterInputChange);\r\n    })\r\n\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (let i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n            \r\n            if (Object.keys(filterConfigData).length !== 0 && filterConfigData.recruitmentType_colorOnly.length) {\r\n                if (filterConfigData.recruitmentType_colorOnly.indexOf(\"PT\") !== -1) {\r\n                    if (recordsArray[i].recruitmentType === \"PT\") {\r\n                        borderColorClass = \"pt-border\";\r\n                        textColorClass = \"pt-text\";\r\n                    }\r\n                }\r\n\r\n                if (filterConfigData.recruitmentType_colorOnly.indexOf(\"RS\") !== -1) {\r\n                    if (recordsArray[i].recruitmentType === \"RS\") {\r\n                        borderColorClass = \"rs-border\";\r\n                        textColorClass = \"rs-text\";\r\n                    }\r\n                }\r\n\r\n                if (filterConfigData.recruitmentType_colorOnly.indexOf(\"WEW\") !== -1) {\r\n                    if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                        borderColorClass = \"wew-border\";\r\n                        textColorClass = \"wew-text\";\r\n                    }\r\n                }\r\n            } else {\r\n                if (recordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia = formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\"beforeend\", \r\n            `<a href=\"${recordsArray[i].url }\" target=\"_blank\">\r\n                <div class=\"result ${borderColorClass}\">\r\n                    <div class=\"top\">\r\n                        <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                        <div class=\"branche-name\">\r\n                            <div class=\"branche\">${recordsArray[i].branche ? recordsArray[i].branche : \"\" }</div>\r\n                            <div class=\"name ${textColorClass}\">${recordsArray[i].name}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"bottom\">\r\n                        <div class=\"city-container\">\r\n                            <div class=\"city\"><img src=\"./img/location_dot.svg\">${recordsArray[i].city}</div>\r\n                        </div>\r\n                        <div class=\"details-container\">\r\n                            ${recordsArray[i].jobType ? \"<div class='jobtype'>\" + recordsArray[i].jobType + \"</div>\" : \"\"}\r\n                            ${recordsArray[i].visibleRate ? recordsArray[i].salaryFrom && recordsArray[i].salaryTo ? \"<div class='salary'>\" + recordsArray[i].salaryFrom + \" - \" + recordsArray[i].salaryTo + \"</div>\"  : \"\" : \"\"}\r\n                            ${recordsArray[i].remote ? \"<div class='remote'>zdalna</div>\" : \"\" }\r\n                            ${recordsArray[i].relocation ? \"<div class='relocation'>relocation</div>\" : \"\" }\r\n                            <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </a>`\r\n            );\r\n        }\r\n    }\r\n    setParentIframeHeight()\r\n};\r\n\r\nconst setPages = (recordsNumber) => {\r\n    pagesQuantityCalc = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    if (pagesQuantityCalc > maxPageBtns) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n=1; n <= maxPageBtns; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\"beforeend\",`<div class=\"page active\">${n}</div>`);\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\"beforeend\",`<div class=\"page\">${n}</div>`);\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\"beforeend\",`<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`);\r\n        let nextBtnLoc = document.querySelector(\".next\");\r\n        nextBtnLoc.addEventListener(\"click\", () => {\r\n            moveNextPagesBtns();\r\n        });\r\n    } else {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n=1; n <= pagesQuantityCalc; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\"beforeend\",`<div class=\"page active\">${n}</div>`);\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\"beforeend\",`<div class=\"page\">${n}</div>`);\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\"beforeend\",`<div class=\"next\"><img src=\"\" alt=\"\" /></div>`);\r\n    }\r\n\r\n    pagesSwitchLoc.insertAdjacentHTML(\"afterbegin\",`<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`);\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n    \r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\nconst createFilteredRecordsArray = () => {\r\n\r\n    const branchesChildrenLoc = branchesLoc.querySelectorAll(\"li input\");\r\n    const jobFormChildrenLoc = jobFormLoc.querySelectorAll(\"li input\");\r\n    const jobTypeChildrenLoc = jobTypeLoc.querySelectorAll(\"li input\");\r\n    const langChildrenLoc = langLoc.querySelectorAll(\"li input\");\r\n    const citiesChildrenLoc = citiesLoc.querySelectorAll(\"li input\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n    let selectedBranches = [];\r\n\r\n    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.branche_filter.length) {\r\n        selectedBranches = filterConfigData.branche_filter;\r\n    } else {\r\n        selectedBranches = Array.from(branchesChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n    \r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n    let selectedJobForms = [];\r\n\r\n    selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes ////////////////\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.checked;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n    let selectedLangs = [];\r\n\r\n    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.language_filter.length) {\r\n        selectedLangs = filterConfigData.language_filter\r\n    } else {\r\n        selectedLangs = Array.from(langChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.checked\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value\r\n            });\r\n    } \r\n    \r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3\r\n    }\r\n\r\n    // selectedCountry ////////////////\r\n\r\n    let selectedCountry = []\r\n    let filteredRecordsArray_5 = []\r\n\r\n    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.location_country_filter.length) {\r\n        selectedCountry = filterConfigData.location_country_filter\r\n        filteredRecordsArray_4.forEach((el) => {\r\n            let addFlag = false\r\n\r\n            selectedCountry.forEach((selectedFiltr) => {\r\n                if (el.country === selectedFiltr) {\r\n                    addFlag = true\r\n                }\r\n            })\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_5.push(el)\r\n            }\r\n        })\r\n    } else {\r\n        filteredRecordsArray_5 = filteredRecordsArray_4\r\n    }\r\n\r\n    let filteredRecordsArray_6 = filteredRecordsArray_5\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n\r\n    let selectedCity = [];\r\n\r\n    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.location_city_filter.length) {\r\n        selectedCity = filterConfigData.location_city_filter\r\n        cityLoc.style.display = \"none\"\r\n    } else {\r\n        selectedCity = Array.from(citiesChildrenLoc)\r\n        .filter(function (elem) {\r\n            if (elem.value) {\r\n                return elem.checked\r\n            }\r\n        })\r\n        .map(function (elem) {\r\n            if (elem.value) {\r\n                return elem.value\r\n            }\r\n        })\r\n    }\r\n    \r\n    let filteredRecordsArray_7 = []\r\n\r\n    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.location_distance !== null) {\r\n        distanceLoc.style.display = \"none\"\r\n    }\r\n\r\n    if (selectedCity.length) {\r\n        \r\n        let selectedDistance = parseInt(distanceTitleLoc.dataset.distance)\r\n\r\n        let lati\r\n        let longi\r\n        let min_lati\r\n        let max_lati\r\n        let min_longi\r\n        let max_longi\r\n\r\n        selectedCity.forEach((el_city) => {\r\n            filteredRecordsArray_6.forEach((el_record) => {\r\n                if (el_city === el_record.city) {\r\n                    lati = el_record.lati\r\n                    longi = el_record.longi\r\n                    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.location_distance !== null) {\r\n                        selectedDistance = filterConfigData.location_distance\r\n                        distanceLoc.style.display = \"none\"\r\n                    }\r\n                    min_lati = lati - selectedDistance * 0.009044\r\n                    max_lati = lati + selectedDistance * 0.009044\r\n                    min_longi = longi - (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180)\r\n                    max_longi = longi + (selectedDistance * 0.0089831) / Math.cos((lati * Math.PI) / 180)\r\n                }\r\n            })\r\n\r\n            filteredRecordsArray_6.forEach((el_record) => {\r\n                if (\r\n                    el_record.lati <= max_lati &&\r\n                    el_record.lati >= min_lati &&\r\n                    el_record.longi <= max_longi &&\r\n                    el_record.longi >= min_longi\r\n                ) {\r\n                    filteredRecordsArray_7.push(el_record)\r\n                }\r\n            })\r\n        })\r\n        \r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6\r\n    }\r\n   \r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n        if (remoteInputLoc.checked || filterConfigData.remote_filter) {\r\n            filteredRecordsArray_7.forEach((el) => {\r\n                let addFlag = false\r\n\r\n                if (el.remote) {\r\n                    addFlag = true\r\n                }\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_8.push(el)\r\n                }\r\n            })\r\n        \r\n        } else {\r\n            filteredRecordsArray_8 = filteredRecordsArray_7\r\n        }\r\n\r\n    // selectedRelocation ////////////////\r\n    let filteredRecordsArray_9 = []\r\n\r\n    if (relocationInputLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el) => {\r\n            let addFlag = false\r\n\r\n            if (el.relocation) {\r\n                addFlag = true\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el)\r\n            }\r\n        })\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8\r\n    }\r\n\r\n    // searchText ////////////////\r\n\r\n    let filteredRecordsArray_10 = []\r\n\r\n    let searchText = searchInputLoc.value\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el) => {\r\n            let addFlag = false\r\n\r\n            let position\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true\r\n                    }\r\n                }\r\n            })\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase())\r\n            if (position !== -1) {\r\n                addFlag = true\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el)\r\n            }\r\n        })\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9\r\n    }\r\n\r\n    // selectedRecruitmentType (coloring of records) ////////////////\r\n\r\n    filteredRecordsArray_11 = []\r\n    \r\n    let selectedRecruitmentType = []\r\n\r\n    if (Object.keys(filterConfigData).length !== 0 && filterConfigData.recruitmentType_filter.length) {\r\n        selectedRecruitmentType = filterConfigData.recruitmentType_filter\r\n        filteredRecordsArray_10.forEach((el) => {\r\n            let addFlag = false\r\n\r\n            selectedRecruitmentType.forEach((selectedFiltr) => {\r\n                if (el.recruitmentType === selectedFiltr) {\r\n                    addFlag = true\r\n                }\r\n            })\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_11.push(el)\r\n            }\r\n        })\r\n    }  else {\r\n        filteredRecordsArray_11 = filteredRecordsArray_10\r\n    }\r\n\r\n    recordsNumber = filteredRecordsArray_11.length\r\n\r\n    createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n  \r\n    setPages(recordsNumber)\r\n    filtersON = true\r\n\r\n    // setParentIframeHeight()\r\n}\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", showHideFilters);\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\nconst createFilterLists = (filterConfigData) => {\r\n\r\n    if (filterConfigData) {\r\n        if (!filterConfigData.relocation_visible) {\r\n            relocationLoc.classList.add(\"unactive\");\r\n        }\r\n    \r\n        if (!filterConfigData.language_visible) {\r\n            languageLoc.classList.add(\"unactive\");\r\n        }\r\n    \r\n        if (!filterConfigData.remote_visible) {\r\n            remoteLoc.classList.add(\"unactive\");\r\n        }\r\n    \r\n        if (!filterConfigData.location_visible) {\r\n            cityLoc.classList.add(\"unactive\");\r\n            distanceLoc.classList.add(\"unactive\");\r\n        }\r\n    \r\n        if (!filterConfigData.branche_visible) {\r\n            sectorLoc.classList.add(\"unactive\");\r\n        }\r\n    }\r\n    \r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        \r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<li>\r\n                <div class=\"checkbox-container-small\">\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"${el}\" name=\"${el}\" value=\"${el}\">\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                    <label class=\"label-text\" for=\"${el}\">${el}</label>\r\n                </div>\r\n            </li>`\r\n            );\r\n        });\r\n    }\r\n};\r\n\r\n// PAGES /////////////////////////////////////////////////////////////\r\nlet globActivePageNo;\r\n\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n    globActivePageNo = parseInt(pageBtn.innerText);\r\n\r\n    \r\n    // setParentIframeHeight()\r\n};\r\n\r\nconst movePrevPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n    }\r\n\r\n    if (firstDispalyedPageNo > 1) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n = firstDispalyedPageNo - 1; n <= lastDispalyedPageNo - 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc + 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 2) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst moveNextPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n        globActivePageNo = activePageNo;\r\n    }\r\n\r\n    if (lastDispalyedPageNo < pagesQuantityCalc) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (let n = firstDispalyedPageNo + 1; n <= lastDispalyedPageNo + 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc - 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 0) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// RWD /////////////////////////////////////////////////////////////\r\nfunction getWidth() {\r\n    return Math.max(\r\n        document.body.scrollWidth,\r\n        document.documentElement.scrollWidth,\r\n        document.body.offsetWidth,\r\n        document.documentElement.offsetWidth,\r\n        document.documentElement.clientWidth\r\n    );\r\n}\r\n\r\nfunction getHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nlet pagesQuantityCalc;\r\n\r\nlet maxPageBtns;\r\n\r\nconst setPagesBtnQuantity = () => {\r\n\r\nlet newMaxPageBtns;\r\n\r\n    if (getWidth() < 500) {newMaxPageBtns = 3}\r\n    if (getWidth() >= 500 && getWidth() < 650) {newMaxPageBtns = 3}\r\n    if (getWidth() >= 650 && getWidth() < 750) {newMaxPageBtns = 4}\r\n    if (getWidth() >= 750 && getWidth() < 950) {newMaxPageBtns = 7}\r\n    if (getWidth() >= 950 && getWidth() < 1200) {newMaxPageBtns = 12}\r\n    if (getWidth() >= 1200) {newMaxPageBtns = 15}\r\n\r\n    if (newMaxPageBtns !== maxPageBtns) {\r\n        maxPageBtns = newMaxPageBtns\r\n        setPages(recordsNumber);\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    setPagesBtnQuantity();\r\n});\r\n\r\nsetPagesBtnQuantity();\r\n\r\nconst filterAwarded = (configFilterArray, awardedRecordsArray, property) => {\r\n    \r\n    for (let i = awardedRecordsArray.length-1; i>=0; i--) {\r\n\r\n        let findFlag = false;\r\n        configFilterArray.forEach((element)=>{\r\n          \r\n            if (awardedRecordsArray[i][property] === element) {\r\n                findFlag = true;\r\n            }\r\n        })\r\n\r\n        if (!findFlag) {\r\n            awardedRecordsArray.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\n// create AWARDED RECORDS BOXES ///////////////////////////////////////////////\r\nconst createAwardedRecordBoxes = (recordsArray, filterConfigData) => {\r\n\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;  \r\n    });\r\n\r\n    if (awardedRecordsArray.length > 0) {\r\n\r\n        if (filterConfigData) {\r\n\r\n            if (filterConfigData.remote_filter) {\r\n                awardedRecordsArray = awardedRecordsArray.filter((elem) => {\r\n                    return elem.remote;\r\n                });\r\n            }\r\n            \r\n            if (filterConfigData.language_filter.length > 0) {\r\n                filterAwarded(filterConfigData.language_filter, awardedRecordsArray, \"lang\");\r\n            }\r\n\r\n            if (filterConfigData.branche_filter.length > 0) {\r\n                filterAwarded(filterConfigData.branche_filter, awardedRecordsArray, \"branche\");\r\n            }\r\n\r\n            if (filterConfigData.location_country_filter.length > 0) {\r\n                filterAwarded(filterConfigData.location_country_filter, awardedRecordsArray, \"country\");\r\n            }\r\n\r\n            if (filterConfigData.location_city_filter.length > 0) {\r\n                filterAwarded(filterConfigData.location_city_filter, awardedRecordsArray, \"city\");\r\n            }\r\n\r\n            if (filterConfigData.recruitmentType_filter.length > 0) {\r\n                filterAwarded(filterConfigData.recruitmentType_filter, awardedRecordsArray, \"recruitmentType\");\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = firstRecordNumber; i < 10; i++) {\r\n            if (awardedRecordsArray[i]) {\r\n                let borderColorClass = \"\";\r\n                let textColorClass = \"\";\r\n\r\n                if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n\r\n                let formaZatrudnienia = \"\";\r\n\r\n                if (awardedRecordsArray[i].jobForm) {\r\n                    awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                        formaZatrudnienia =\r\n                            formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                    });\r\n                }\r\n\r\n                awardedResultsLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<a href=\"${\r\n                        awardedRecordsArray[i].url\r\n                    }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n                <div class=\"top\">\r\n                \r\n                        <div class=\"lang\">\r\n                            <p>${awardedRecordsArray[i].lang}</p>\r\n                        </div>\r\n                        <div class=\"branche-name\">\r\n                            <div class=\"branche\">${\r\n                                awardedRecordsArray[i].branche\r\n                                    ? awardedRecordsArray[i].branche\r\n                                    : \"\"\r\n                            }</div>\r\n                            <div class=\"name ${textColorClass}\">${\r\n                        awardedRecordsArray[i].name\r\n                    }</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"bottom\">\r\n                    <div class=\"city-container\">\r\n                        <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                            awardedRecordsArray[i].city\r\n                        }</div></div>\r\n                        <div class=\"details-container\">\r\n                        ${\r\n                            awardedRecordsArray[i].remote\r\n                                ? \"<div class='remote'>zdalna</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].relocation\r\n                                ? \"<div class='relocation'>relocation</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].jobType\r\n                                ? \"<div class='jobtype'>\" +\r\n                                awardedRecordsArray[i].jobType +\r\n                                \"</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].visibleRate\r\n                                ? awardedRecordsArray[i].salaryFrom &&\r\n                                awardedRecordsArray[i].salaryTo\r\n                                    ? \"<div class='salary'>\" +\r\n                                    awardedRecordsArray[i].salaryFrom +\r\n                                    \" - \" +\r\n                                    awardedRecordsArray[i].salaryTo +\r\n                                    \"</div>\"\r\n                                    : \"\"\r\n                                : \"\"\r\n                        }\r\n                        <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"ribbon-wrap\">\r\n                        <div class=\"ribbon\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n            </div></a>`\r\n                );\r\n            }\r\n        }\r\n    } else {\r\n        awardedResultsLoc.style.margin = \"0\"\r\n    }\r\n}\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\n// const summariseDownload = (recordsNumber) => {\r\n//     recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n//     if (!recordsNumber) {\r\n//         noResultsLoc.classList.add(\"active\");\r\n//     } else {\r\n//         noResultsLoc.classList.remove(\"active\");\r\n//     }\r\n// }\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n\r\n    // BranchesList\r\n   \r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        if (Object.keys(filterConfigData).length !== 0 && filterConfigData.branche_filter.length) {\r\n            if (filterConfigData.branche_filter.indexOf(branche) !== -1) {\r\n                filterBranchesList.push(branche)\r\n            }\r\n        } else {\r\n            filterBranchesList.push(branche)\r\n        }\r\n    }\r\n\r\n    // JobFormList\r\n\r\n    if (jobForm) {\r\n        jobForm.forEach((elem) => {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem)\r\n            }\r\n        })\r\n    }\r\n\r\n    // JobTypeList\r\n\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType)\r\n    }\r\n\r\n    // LangList\r\n\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n        if (Object.keys(filterConfigData).length !== 0) {\r\n            if (filterConfigData.language_filter.length) {\r\n                if (filterConfigData.language_filter.indexOf(lang) !== -1) {\r\n                    filterLangList.push(lang)\r\n                }\r\n            } else {\r\n                filterLangList.push(lang)\r\n            }\r\n        } else {\r\n            filterLangList.push(lang)\r\n        }\r\n    }\r\n\r\n    // CountriesList\r\n\r\n    if (Object.keys(filterConfigData).length !== 0) {\r\n        if (!filterCountriesList[country]) {\r\n            filterCountriesList[country] = []\r\n        }\r\n        if (filterConfigData.location_city_filter.length) {\r\n            if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        } else if (filterConfigData.location_country_filter.length) {\r\n            if (filterConfigData.location_country_filter.indexOf(country) !== -1) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        } else {\r\n            if (filterCountriesList[country].findIndex((arr_el) => arr_el.city === city) === -1) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        }\r\n    } else {\r\n        if (!filterCountriesList[country]) {\r\n            filterCountriesList[country] = []\r\n        }\r\n        if (filterCountriesList[country].findIndex((arr_el) => arr_el.city === city) === -1) {\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n\r\n        let parsedJobLocation;\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n}\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\",\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n}\r\n\r\n// gets DATA FROM API 2 ///////////////////////////////////////////////\r\nconst getAPI_2 = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://rsgrupaprogres.traffit.com/public/job_posts/published\",\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n}\r\n\r\nconst loopOnAPI = (jsonData, filterConfigData) => {\r\n    if (jsonData.length > 0 && apiNumber === 1) {\r\n        rawAPIArray = rawAPIArray.concat(jsonData)\r\n        apiPage++\r\n        createRecordsObjFromAPI(apiPage, filterConfigData)\r\n    } else if (jsonData.length === 0  && apiNumber === 1) {\r\n        apiPage = 1\r\n        createRecordsObjFromAPI_2(apiPage, filterConfigData)\r\n    } else if (jsonData.length > 0  && apiNumber === 2) {\r\n        rawAPIArray = rawAPIArray.concat(jsonData)\r\n        apiPage++\r\n        createRecordsObjFromAPI_2(apiPage, filterConfigData)\r\n    } else {\r\n        reworkData(rawAPIArray)\r\n        recordsNumber = rawAPIArray.length\r\n        createAwardedRecordBoxes(allRecordsArray, filterConfigData)\r\n        setPages(recordsNumber)\r\n        createFilterLists(filterConfigData)\r\n        addListenerToFilterListsElements()\r\n        createFilteredRecordsArray()\r\n        distanceInputsLoc.forEach((elem) => {\r\n            elem.checked = false\r\n        })\r\n        jobInputLoc.value = \"\"\r\n    }\r\n}\r\n\r\nasync function createRecordsObjFromAPI(apiPage, filterConfigData) {\r\n    apiNumber = 1\r\n    const rawData = await getAPI(apiPage)\r\n    const jsonData = await rawData.json()\r\n    loopOnAPI(jsonData, filterConfigData)\r\n}\r\n\r\nasync function createRecordsObjFromAPI_2(apiPage, filterConfigData) {\r\n    apiNumber = 2\r\n    const rawData = await getAPI_2(apiPage)\r\n    const jsonData = await rawData.json()\r\n    loopOnAPI(jsonData, filterConfigData)\r\n}\r\n\r\n// consider configuration filters ////////////////////////\r\nconst getConfigFilter = () => {\r\n    const response = fetch(\"./config/config.json\");\r\n    return response;\r\n}\r\n\r\nasync function readConfigFilter() {\r\n    try {\r\n        const rawData = await getConfigFilter();\r\n        filterConfigData = await rawData.json();\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } catch (e) {\r\n        console.error(e);\r\n        createRecordsObjFromAPI(apiPage);\r\n    }\r\n}\r\n\r\nreadConfigFilter();\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n\r\n    // setParentIframeHeight()\r\n})\r\n\r\n// SEARCH LISTENER /////////////////////////////////////////////////////////////\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\nadvancedSearchBar.addEventListener(\"click\", () => {\r\n    advancedContainer.classList.toggle(\"showed\");\r\n    advancedSearchBtn.classList.toggle(\"rotate180\");\r\n    setParentIframeHeight()\r\n})\r\n\r\nconst clearAllFiltersLoc = document.querySelector(\".clear-all-filters\")\r\n\r\nclearAllFiltersLoc.addEventListener(\"click\", () => {\r\n\r\n    filterListLocArray.forEach((elem, index) => {\r\n\r\n        const clearBtn = elem.querySelector(\".clear-btn\");\r\n        const filtersQuantityBtn = elem.querySelector(\".filters-quantity\");\r\n        const filtersSelectedOptions = elem.querySelector(\".selected-options\");\r\n        const filtersListTitle = elem.querySelector(\".list-title\");\r\n\r\n        selectedOptionsInFilterArray[index] = [];\r\n        clearBtn.style.opacity = \"0\";\r\n        elem.querySelectorAll(\"input\").forEach((el) => {\r\n            el.checked = false;\r\n        })\r\n        filtersSelectedOptions.innerText = \"\";\r\n        filtersListTitle.classList.remove(\"mini\");\r\n        filtersQuantityBtn.style.opacity = \"0\";\r\n    })\r\n\r\n    jobInputLoc.value = \"\";\r\n    jobLabelLoc.classList.remove(\"mini\");\r\n    jobInputLoc.classList.remove(\"active\");\r\n    jobClearBtnLoc.style.opacity = \"0\";\r\n    jobClearBtnLoc.style.display = \"none\";\r\n\r\n    distanceLoc.querySelectorAll(\"input\").forEach((elem) => {\r\n        elem.checked = false;\r\n    })\r\n    distanceListTitleLoc.innerText = \"+0 km\";\r\n    createFilteredRecordsArray();\r\n});\r\n\r\njobInputLoc.addEventListener(\"keypress\", (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      searchBtn.click();\r\n    }\r\n});\r\n\r\njobInputLoc.addEventListener(\"blur\", () => {\r\n    if (jobInputLoc.value !== \"\") {\r\n        searchBtn.click();\r\n    }\r\n});\r\n\r\njobInputLoc.addEventListener(\"input\", () => {\r\n    if (jobInputLoc.value === \"\") {\r\n      searchBtn.click();\r\n    }\r\n});\r\n\r\nremoteInputLoc.addEventListener(\"change\", () => {\r\n    searchBtn.click();\r\n})\r\n\r\nrelocationInputLoc.addEventListener(\"change\", () => {\r\n    searchBtn.click();\r\n})\r\n\r\n"]}